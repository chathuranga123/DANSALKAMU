CREATE DATABASE  IF NOT EXISTS `dansala` ;
USE `dansala`;
DROP TABLE IF EXISTS `dansal`;

CREATE TABLE `dansal` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(100) NOT NULL,
  `longitude` float DEFAULT NULL,
  `latitude` float DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=7 DEFAULT CHARSET=latin1;

LOCK TABLES `dansal` WRITE;
INSERT INTO `dansal` VALUES (1,'Cool Drinks',79.9981,6.93582),(2,'Tea',80.4917,7.48322),(3,'Bima',79.8849,7.8945),(4,'Bima',78.9489,7.8393),(5,'kama',80.5917,7.47322),(6,'coffee',80.4785,7.8945);

<!-- STATUSCATEGORY TABLE -->
CREATE TABLE STATUSCATEGORY (
    CODE VARCHAR(16) NOT NULL,
    DESCRIPTION VARCHAR(64) NOT NULL,
	PRIMARY KEY (CODE)
)ENGINE=InnoDB;

<!-- STATUS TABLE -->
CREATE TABLE STATUS (
    CODE VARCHAR(16) NOT NULL,
    DESCRIPTION VARCHAR(64) NOT NULL,
	CATEGORY VARCHAR(16) NOT NULL,
	PRIMARY KEY (CODE),
	FOREIGN KEY (CATEGORY) REFERENCES STATUSCATEGORY(CODE)
)ENGINE=InnoDB;



<!-- USERROLETYPE TABLE -->
CREATE TABLE USERROLETYPE (
    USERROLETYPECODE VARCHAR(16) NOT NULL,
    DESCRIPTION VARCHAR(64) NOT NULL,
	STATUSCODE VARCHAR(16) NOT NULL,
	LASTUPDATEDUSER VARCHAR(64) NOT NULL,
	LASTUPDATEDTIME DATETIME  DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	CREATEDTIME DATETIME  DEFAULT CURRENT_TIMESTAMP,
	PRIMARY KEY (USERROLETYPECODE),
	FOREIGN KEY (STATUSCODE) REFERENCES STATUS(CODE)
)ENGINE=InnoDB;


<!-- USERROLE TABLE -->
CREATE TABLE USERROLE (
    USERROLECODE VARCHAR(16) NOT NULL,
    DESCRIPTION VARCHAR(64) NOT NULL,
	STATUSCODE VARCHAR(16) NOT NULL,
	USERROLETYPECODE VARCHAR(16) NOT NULL,
	LASTUPDATEDUSER VARCHAR(64) NOT NULL,
	LASTUPDATEDTIME DATETIME  DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	CREATEDTIME DATETIME  DEFAULT CURRENT_TIMESTAMP,
	PRIMARY KEY (USERROLECODE),
	FOREIGN KEY (STATUSCODE) REFERENCES STATUS(CODE),
	FOREIGN KEY (USERROLETYPECODE) REFERENCES USERROLETYPE(USERROLETYPECODE)
)ENGINE=InnoDB;





<!-- SECTION TABLE -->
CREATE TABLE SECTION (
    SECTIONCODE VARCHAR(16) NOT NULL,
    DESCRIPTION VARCHAR(64) NOT NULL,
	STATUSCODE VARCHAR(16) NOT NULL,
	LASTUPDATEDUSER VARCHAR(64) NOT NULL,
	LASTUPDATEDTIME DATETIME  DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	CREATEDTIME DATETIME  DEFAULT CURRENT_TIMESTAMP,
	PRIMARY KEY (SECTIONCODE),
	FOREIGN KEY (STATUSCODE) REFERENCES STATUS(CODE)
)ENGINE=InnoDB;

<!-- PAGE TABLE -->
CREATE TABLE PAGE(
    PAGECODE VARCHAR(16) NOT NULL,
    DESCRIPTION VARCHAR(64) NOT NULL,
	URL VARCHAR(256) NOT NULL,
	STATUSCODE VARCHAR(16) NOT NULL,
	LASTUPDATEDUSER VARCHAR(64) NOT NULL,
	LASTUPDATEDTIME DATETIME  DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	CREATEDTIME DATETIME  DEFAULT CURRENT_TIMESTAMP,
	PRIMARY KEY (PAGECODE),
	FOREIGN KEY (STATUSCODE) REFERENCES STATUS(CODE)
)ENGINE=InnoDB;


<!-- TASK TABLE -->
CREATE TABLE TASK(
    TASKCODE VARCHAR(16) NOT NULL,
    DESCRIPTION VARCHAR(64) NOT NULL,
	STATUSCODE VARCHAR(16) NOT NULL,
	LASTUPDATEDUSER VARCHAR(64) NOT NULL,
	LASTUPDATEDTIME DATETIME  DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	CREATEDTIME DATETIME  DEFAULT CURRENT_TIMESTAMP,
	PRIMARY KEY (TASKCODE),
	FOREIGN KEY (STATUSCODE) REFERENCES STATUS(CODE)
)ENGINE=InnoDB;


<!--PAGETASK TABLE-->
CREATE TABLE PAGETASK(
    PAGE VARCHAR(16) NOT NULL,
    TASK VARCHAR(16) NOT NULL,
	STATUSCODE VARCHAR(16) NOT NULL,
	LASTUPDATEDUSER VARCHAR(64) NOT NULL,
	LASTUPDATEDTIME DATETIME  DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	CREATEDTIME DATETIME  DEFAULT CURRENT_TIMESTAMP,
	PRIMARY KEY (PAGE,TASK),
	FOREIGN KEY (PAGE) REFERENCES PAGE(PAGECODE),
	FOREIGN KEY (TASK) REFERENCES TASK(TASKCODE),
	FOREIGN KEY (STATUSCODE) REFERENCES STATUS(CODE)
)ENGINE=InnoDB;


<!--PAGESECTIONUSERROLE TABLE-->
CREATE TABLE PAGESECTIONUSERROLE(
    PAGE VARCHAR(16) NOT NULL,
    SECTION VARCHAR(16) NOT NULL,
	USERROLE VARCHAR(16) NOT NULL,
	STATUSCODE VARCHAR(16) NOT NULL,
	LASTUPDATEDUSER VARCHAR(64) NOT NULL,
	LASTUPDATEDTIME DATETIME  DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	CREATEDTIME DATETIME  DEFAULT CURRENT_TIMESTAMP,
	PRIMARY KEY (PAGE,SECTION,USERROLE),
	FOREIGN KEY (PAGE) REFERENCES PAGE(PAGECODE),
	FOREIGN KEY (SECTION) REFERENCES SECTION(SECTIONCODE),
	FOREIGN KEY (USERROLE) REFERENCES USERROLE(USERROLECODE),
	FOREIGN KEY (STATUSCODE) REFERENCES STATUS(CODE)
)ENGINE=InnoDB;


<!-- TASK PAGETASKUSERROLE -->
CREATE TABLE PAGETASKUSERROLE(
    PAGE VARCHAR(16) NOT NULL,
	TASK VARCHAR(16) NOT NULL,
	USERROLE VARCHAR(16) NOT NULL,
	STATUSCODE VARCHAR(16) NOT NULL,
	LASTUPDATEDUSER VARCHAR(64) NOT NULL,
	LASTUPDATEDTIME DATETIME  DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	CREATEDTIME DATETIME  DEFAULT CURRENT_TIMESTAMP,
	PRIMARY KEY (PAGE,TASK,USERROLE),
	FOREIGN KEY (PAGE) REFERENCES PAGE(PAGECODE),
	FOREIGN KEY (TASK) REFERENCES TASK(TASKCODE),
	FOREIGN KEY (USERROLE) REFERENCES USERROLE(USERROLECODE),
	FOREIGN KEY (STATUSCODE) REFERENCES STATUS(CODE)
)ENGINE=InnoDB;


<!-- DANSALUSER DANSALUSER -->
CREATE TABLE DANSALUSER(
    USERID BIGINT NOT NULL AUTO_INCREMENT,
	USERNAME VARCHAR(32) NOT NULL,
	PASSWORD VARCHAR(512) NOT NULL,
	FIRSTNAME VARCHAR(256) NOT NULL,
	LASTNAME VARCHAR(256) NOT NULL,
	EMAIL VARCHAR(256) NOT NULL,
	MOBILENO VARCHAR(16) NOT NULL,
	RESETLOGIN SMALLINT(1) DEFAULT 0,
	FIRSTLOGIN SMALLINT(1) DEFAULT 0,
	CHANNEL VARCHAR(8) NOT NULL,
	VERIFYCODE VARCHAR(16),
	STATUSCODE VARCHAR(16) NOT NULL,
	LASTUPDATEDUSER VARCHAR(64) NOT NULL,
	LASTLOGGEDTIME DATETIME  DEFAULT CURRENT_TIMESTAMP,
	LASTUPDATEDTIME DATETIME  DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	CREATEDTIME DATETIME  DEFAULT CURRENT_TIMESTAMP,
	PRIMARY KEY (USERID),
	FOREIGN KEY (STATUSCODE) REFERENCES STATUS(CODE)
)ENGINE=InnoDB;

ALTER TABLE DANSALUSER AUTO_INCREMENT=5001;


<!-- DANSALUSER DANSALUSER -->
CREATE TABLE AUDITTRACE(
    AUDITTRACEID BIGINT NOT NULL AUTO_INCREMENT,
	USERROLECODE VARCHAR(16),
	DESCRIPTION VARCHAR(512),
	PAGECODE VARCHAR(16),
	TASKCODE VARCHAR(16),
	REMARKS VARCHAR(256),
	IP VARCHAR(16),
	OLDVALUE VARCHAR(512),
	NEWVALUE VARCHAR(512),
	AFFECTEDKEY VARCHAR(256),
	LASTUPDATEDUSER VARCHAR(64) NOT NULL,
	LASTUPDATEDTIME DATETIME  DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	CREATEDTIME DATETIME  DEFAULT CURRENT_TIMESTAMP,
	PRIMARY KEY (AUDITTRACEID)
)ENGINE=InnoDB;


ALTER TABLE AUDITTRACE AUTO_INCREMENT=1001;

